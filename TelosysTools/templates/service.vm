#set ( $BNAME = "${beanClass.name}" )
#set ( $BNAME_V = $beanClass.name.substring(0,1).toLowerCase() + $beanClass.name.substring(1) )
#set ( $KEYS = "" )
#foreach($singlekey in $beanClass.keyAttributes)
#set ( $KEYS = $KEYS+$singlekey.name.substring(0,1).toUpperCase()+$singlekey.name.substring(1))
#end
#set ( $KEYS_PAR = "" )
#foreach($field in $beanClass.keyAttributes)
#set ( $KEYS_PAR = $KEYS_PAR+ "," + $field.type +" " + $field.name )
#end
#set ( $KEYS_PAR = $KEYS_PAR.substring(1) )
#set ( $KEYS_TYPE = "" )
#foreach($field in $beanClass.keyAttributes)
#set ( $KEYS_TYPE = $KEYS_TYPE+ "," + $field.type)
#end
#set ( $KEYS_TYPE = $KEYS_TYPE.substring(1) )
package ${target.javaPackageFromFolder($SRC)} ;

import java.util.Collection;
import java.util.List;
import java.util.Map;

import $beanClass.fullName;
import com.bstek.bdf.pagination.Pagination;

public interface ${BNAME}Service {
 
	@Deprecated
	public $KEYS_TYPE insert(${BNAME} $BNAME_V) throws Exception;

	public $KEYS_TYPE insertSelective(${BNAME} $BNAME_V) throws Exception;

	public void deleteBy$KEYS($KEYS_PAR) throws Exception;
	
	public void deleteByBean(${BNAME} $BNAME_V) throws Exception;

	@Deprecated
	public void update(${BNAME} $BNAME_V) throws Exception;

   	public void updateSelective(${BNAME} $BNAME_V) throws Exception;
  	
	public ${BNAME} getBy$KEYS($KEYS_PAR);

	public List<${BNAME}> getAll();

	public Collection<${BNAME}> getAll(	Map<String, Object> parameter);

	public Collection<${BNAME}> getAllByBean(${BNAME} $BNAME_V);

	public Pagination<${BNAME}> getPageAllByCondition(Map<String, Object> map,int pageIndex,int pageSize);

	public Pagination<${BNAME}> getPageAllByBean(${BNAME} $BNAME_V, int pageIndex, int pageSize);

	public Pagination<${BNAME}> getPageAll(int pageIndex,int pageSize);

}
